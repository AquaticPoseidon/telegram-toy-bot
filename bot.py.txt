import logging
import os
import telebot
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime, time

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID"))
GOOGLE_SHEET_NAME = os.getenv("GOOGLE_SHEET_NAME")

bot = telebot.TeleBot(BOT_TOKEN)

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è Google Sheets
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive.file", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_name("google_credentials.json", scope)
client = gspread.authorize(creds)
sheet = client.open(GOOGLE_SHEET_NAME).sheet1

# –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã
start_time = time(5, 30)
end_time = time(20, 0)

def is_working_hours():
    now = datetime.now().time()
    return start_time <= now <= end_time

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
welcome_message = (
    "–ü—Ä–∏–≤–µ—Ç! üëã –í—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ –≤—è–∑–∞–Ω—ã—Ö –∏–≥—Ä—É—à–µ–∫ —Ä—É—á–Ω–æ–π —Ä–∞–±–æ—Ç—ã üß∏\n"
    "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –≤—ã–±—Ä–∞—Ç—å –∏–≥—Ä—É—à–∫—É –∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –º–∞—Å—Ç–µ—Ä–æ–º.\n\n"
    "–î–æ—Å—Ç—É–ø–Ω—ã –∫–Ω–æ–ø–∫–∏:\n"
    "üì¶ –ö–∞—Ç–∞–ª–æ–≥ ‚Äî –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∏–≥—Ä—É—à–∫–∏ —Å —Ü–µ–Ω–∞–º–∏\n"
    "üßµ –°–≤—è–∑—å —Å –º–∞—Å—Ç–µ—Ä–æ–º ‚Äî –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑\n\n"
    "–í –∫–∞—Ä—Ç–æ—á–∫–µ –∫–∞–∂–¥–æ–π –∏–≥—Ä—É—à–∫–∏ —É–∫–∞–∑–∞–Ω—ã:\n"
    "üì∑ –§–æ—Ç–æ\nüìê –†–∞–∑–º–µ—Ä\nüí∞ –¶–µ–Ω–∞ (–±–µ–∑ —É—á—ë—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏)\nüì¶ –ù–∞–ª–∏—á–∏–µ (–≤ –Ω–∞–ª–∏—á–∏–∏, –Ω–∞ –∑–∞–∫–∞–∑, –æ—Å—Ç–∞–ª–∞—Å—å 1 —à—Ç—É–∫–∞ –∏ —Ç.–ø.)\n\n"
    "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Å 5:30 –¥–æ 20:00 –ø–æ –º–æ—Å–∫–æ–≤—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏.\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üíõ"
)

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start(message):
    if not is_working_hours():
        bot.send_message(message.chat.id, "–°–µ–π—á–∞—Å –±–æ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –Ø –æ—Ç–≤–µ—á—É –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è —Å 5:30 –¥–æ 20:00 –ø–æ –ú–°–ö. üåô")
        return

    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row("üì¶ –ö–∞—Ç–∞–ª–æ–≥", "üßµ –°–≤—è–∑—å —Å –º–∞—Å—Ç–µ—Ä–æ–º")
    bot.send_message(message.chat.id, welcome_message, reply_markup=markup)

# –ö–∞—Ç–∞–ª–æ–≥
@bot.message_handler(func=lambda m: m.text == "üì¶ –ö–∞—Ç–∞–ª–æ–≥")
def send_catalog(message):
    if not is_working_hours():
        bot.send_message(message.chat.id, "–ö–∞—Ç–∞–ª–æ–≥ –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è —Å 5:30 –¥–æ 20:00 –ø–æ –ú–°–ö. üåô")
        return

    records = sheet.get_all_records()
    sorted_records = sorted(records, key=lambda x: x.get('–¶–µ–Ω–∞', 0))
    for item in sorted_records:
        photo_url = item.get("–§–æ—Ç–æ (URL)", "")
        name = item.get("–ù–∞–∑–≤–∞–Ω–∏–µ", "")
        price = item.get("–¶–µ–Ω–∞", "")
        size = item.get("–†–∞–∑–º–µ—Ä", "")
        status = item.get("–ù–∞–ª–∏—á–∏–µ", "")

        text = f"#{name}\n\nüí∞ –¶–µ–Ω–∞: {price} (–±–µ–∑ —É—á—ë—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏)\nüìê –†–∞–∑–º–µ—Ä: {size}\nüì¶ –ù–∞–ª–∏—á–∏–µ: {status}"

        if photo_url:
            bot.send_photo(message.chat.id, photo_url, caption=text)
        else:
            bot.send_message(message.chat.id, text)

# –°–≤—è–∑—å —Å –º–∞—Å—Ç–µ—Ä–æ–º
@bot.message_handler(func=lambda m: m.text == "üßµ –°–≤—è–∑—å —Å –º–∞—Å—Ç–µ—Ä–æ–º")
def contact(message):
    text = (
        "–í—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π –ª—é–±—ã–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º:\n\n"
        "üìß Email: your_email@example.com\n"
        "üí¨ Telegram: t.me/your_username"
    )
    bot.send_message(message.chat.id, text)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    bot.polling(none_stop=True)
